name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - uses : actions/checkout@v3
      - run : mkdir ./src/main/resources/
      - run : touch ./src/main/resources/application.yml
      - run : echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
      - run : cat ./src/main/resources/application.yml

      - run : mkdir ./src/test/resources/
      - run: touch ./src/test/resources/application.yml
      - run: echo "${{ secrets.TEST_APPLICATION }}" > ./src/test/resources/application.yml
      - run: cat ./src/test/resources/application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Make zip file
        run: zip -r ./quiz-server.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./quiz-server.zip s3://1000quiz-bucket/quiz-server.zip

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name quiz-application \
          --deployment-group-name quiz-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=1000quiz-bucket,bundleType=zip,key=quiz-server.zip \
          --region ${{ secrets.AWS_REGION }}
